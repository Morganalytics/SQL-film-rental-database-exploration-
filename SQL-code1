// The following involves SELECT, ORDER BY, COUNT and DISTINCT commands. //

Q. What are the customer IDs of the first 10 customers who created a payment?
A. SELECT customer_id FROM payment
ORDER BY payment_date ASC
LIMIT 10;

Q. What are the titles of the 5 shortest movies?
A. SELECT title, length FROM film
ORDER BY length ASC
LIMIT 5;
Q. How many titles have a runtime of 50mins or less?
A. SELECT COUNT(*) FROM film
WHERE length <= 50;

Q. How many payment transactions were greater than Â£5.00?
A. SELECT COUNT(amount)FROM payment
WHERE amount > 5;

Q. How many actors have a first name that starts with the letter P?
A. SELECT COUNT(*) FROM actor
WHERE first_name LIKE 'P%';

Q. How many unique districts are our customers from?
A. SELECT COUNT(DISTINCT(district)) FROM address;
 
Q. Retrieve the list of names for those distinct districts from previous question.
A. SELECT DISTINCT(district) FROM address;

// Now we're moving into WHERE, GROUP BY and HAVING as well as some more aggregate commands. //

Q. How many films have a rating of R and a replacement cost between $5 and $15?
A. SELECT COUNT(*) FROM film
WHERE rating = 'R' 
AND replacement_cost BETWEEN 5 AND 15;

Q. How many films have the word Truman somewhere in the title?
A. SELECT COUNT(*) FROM film
WHERE title LIKE '%Truman%';

Q. How many payments did each staff member handle?
A. SELECT staff_id, COUNT(*) 
FROM payment
GROUP BY staff_id;

Q. What is the average replacement cost per MPAA rating?
A. SELECT rating, ROUND(AVG(replacement_cost),2) 
FROM film
GROUP BY rating;

Q. What are the customer IDs of the top 5 customers by total spend?
A. SELECT customer_id, SUM(amount)
FROM payment
GROUP BY customer_id
ORDER BY SUM(amount) DESC
LIMIT 5;

Q. What are the customer IDs of customers who have made more than 40 transaction payments?
A. SELECT customer_id, COUNT(*)
FROM payment
GROUP BY customer_id
HAVING COUNT(*) >= 40;

Q. What are the customer IDs of customers who have spent more than $100 in payment transactions with our staff_id member 2?
A. SELECT customer_id ,SUM(amount)
FROM payment
WHERE staff_id = 2
GROUP BY customer_id
HAVING SUM(amount) > 100;

// And some more advanced commands, utilizing LIKE and JOIN commands. //

Q. Return the customer IDs of customers who have spent at least $110 with the staff member who has an ID of 2.
A. SELECT customer_id
FROM payment
WHERE staff_id = 2
GROUP BY customer_id
HAVING SUM(amount) >= 110;

Q. How many films begin with the letter J?
A. SELECT COUNT(*) 
FROM film
WHERE title LIKE 'J%';

Q. What customer has the highest customer ID number whose name starts with an 'E' and has an address ID lower than 500?
A. SELECT first_name, last_name
FROM customer
WHERE first_name LIKE 'E%' 
AND address_id < 500
ORDER BY customer_id DESC
LIMIT 1;

Q. What are the emails of the customers who live in California?
A. SELECT address.district, email FROM customer
INNER JOIN address
ON customer.address_id = address.address_id
WHERE district = 'California';
